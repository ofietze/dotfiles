# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles

PLUGIN_DIR="$CONFIG_DIR/plugins"
ITEM_DIR="$CONFIG_DIR/items"

#### Import Colors
source "$CONFIG_DIR/colors.sh" # Loads all defined colors
##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

sketchybar --bar position=top height=30 blur_radius=30 color=0x40000000

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
  padding_left=5
  padding_right=5
  icon.font="Hack Nerd Font:Bold:17.0"
  label.font="SF Pro:Semibold:17.0"
  icon.color=0xffffffff
  label.color=0xffffffff
  icon.padding_left=4
  icon.padding_right=4
  label.padding_left=4
  label.padding_right=4
  updates=on
)
sketchybar --default "${default[@]}"

##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

sketchybar --add item chevron left \
           --set chevron icon=œÜ label.drawing=off \
           --add item front_app left \
           --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
           --subscribe front_app front_app_switched

##### Adding aeropsace layouts #####
# Add the aerospace_workspace_change event we specified in aerospace.toml
sketchybar --add event aerospace_workspace_change

# Add display change event to handle monitor changes
sketchybar --add event display_change
sketchybar --add item display_change_listener left \
           --set display_change_listener drawing=off \
           --subscribe display_change_listener display_change \
           script="$PLUGIN_DIR/monitor_change.sh"

# Initialize workspaces based on what's active
monitor_count=$(aerospace list-monitors | wc -l | tr -d ' ')

# Create workspace items for active workspaces and currently focused workspace  
for monitor in $(aerospace list-monitors); do
  for sid in $(aerospace list-workspaces --monitor "$monitor"); do
    # Skip workspace 0 - never show it
    if [ "$sid" = "0" ]; then
      continue
    fi
    
    # Determine which display this workspace should be shown on
    display_id="1"
    
    if [ "$monitor_count" -eq 2 ]; then
      case "$sid" in
        [89]|10)
          display_id="2"
          ;;
        *)
          display_id="1"
          ;;
      esac
    fi
      
    sketchybar --add item space.$sid left \
      --set space.$sid display="$display_id" \
      --subscribe space.$sid aerospace_workspace_change \
      --set space.$sid \
      drawing=on \
      background.color=0x44ffffff \
      background.corner_radius=5 \
      background.drawing=on \
      background.border_color=0xAAFFFFFF \
      background.border_width=0 \
      background.height=20 \
      icon="$sid" \
      icon.padding_left=10 \
      icon.shadow.distance=4 \
      icon.shadow.color=0xA0000000 \
      label.font="sketchybar-app-font:Regular:16.0" \
      label.padding_right=20 \
      label.padding_left=0 \
      label.y_offset=-1 \
      label.shadow.drawing=off \
      label.shadow.color=0xA0000000 \
      label.shadow.distance=4 \
      click_script="aerospace workspace $sid" \
      script="$CONFIG_DIR/plugins/aerospace.sh $sid"
  done
done

# Load initial icons and workspace state
"$CONFIG_DIR/plugins/update_workspace_icons.sh"

# Add monitor watcher to check for display changes every 2 seconds
sketchybar --add item monitor_watcher left \
           --set monitor_watcher drawing=off update_freq=2 \
           script="$PLUGIN_DIR/monitor_watcher.sh"

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events

sketchybar --add item clock right \
           --set clock update_freq=10 icon=Ôê∫  script="$PLUGIN_DIR/clock.sh" \
           --add item volume right \
           --set volume script="$PLUGIN_DIR/volume.sh" \
           --subscribe volume volume_change \
           --add item battery right \
           --set battery update_freq=120 script="$PLUGIN_DIR/battery.sh" \
           --subscribe battery system_woke power_source_change

sketchybar --add item network right \
           --set network update_freq=2 icon=üåê script="$PLUGIN_DIR/network.sh"

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update
